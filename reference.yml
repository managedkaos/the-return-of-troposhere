Description: Dev Stack
Mappings:
  RegionMap:
    ap-northeast-1:
      ami: ami-07ad4b1c3af1ea214
    ap-northeast-2:
      ami: ami-06e7b9c5e0c4dd014
    ap-south-1:
      ami: ami-0d773a3b7bb2bb1c1
    ap-southeast-1:
      ami: ami-0c5199d385b432989
    ap-southeast-2:
      ami: ami-07a3bd4944eb120a0
    ca-central-1:
      ami: ami-0427e8367e3770df1
    eu-central-1:
      ami: ami-0bdf93799014acdc4
    eu-west-1:
      ami: ami-00035f41c82244dab
    eu-west-2:
      ami: ami-0b0a60c0a2bd40612
    eu-west-3:
      ami: ami-08182c55a1c188dee
    sa-east-1:
      ami: ami-03c6239555bb12112
    us-east-1:
      ami: ami-0ac019f4fcb7cb7e6
    us-east-2:
      ami: ami-0f65671a86f061fcd
    us-west-1:
      ami: ami-063aa838bd7631e0b
    us-west-2:
      ami: ami-0bbe6b35405ecebdb
Outputs:
  DatabaseDnsName:
    Description: DBEndpoint
    Value: !GetAtt 'Database.Endpoint.Address'
  InstanceDnsName:
    Description: PublicDnsName
    Value: !GetAtt 'Instance.PublicDnsName'
Parameters:
  DBName:
    AllowedPattern: '[-_a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only alphanumeric
      characters
    Default: miramax
    Description: The database name
    Type: String
  DBPass:
    AllowedPattern: '[-_a-zA-Z0-9]*'
    ConstraintDescription: Must contain only alphanumeric characters
    Description: The database admin account password
    NoEcho: true
    Type: String
  DBUser:
    AllowedPattern: '[-_a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only alphanumeric
      characters
    Default: miramax
    Description: Username for MySQL database access
    Type: String
  KeyName:
    ConstraintDescription: An existing EC2 KeyPair.
    Description: An existing EC2 KeyPair.
    Type: AWS::EC2::KeyPair::KeyName
Resources:
  DBSecurityGroup:
    Properties:
      GroupDescription: DB Security Group
      SecurityGroupIngress:
        - Description: MySQL
          FromPort: '3306'
          IpProtocol: tcp
          SourceSecurityGroupId: !GetAtt 'EC2SecurityGroup.GroupId'
          ToPort: '3306'
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
    Type: AWS::EC2::SecurityGroup
  Database:
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t2.micro
      DBName: !Ref 'DBName'
      Engine: MySQL
      EngineVersion: 5.7.21
      MasterUserPassword: !Ref 'DBPass'
      MasterUsername: !Ref 'DBUser'
      VPCSecurityGroups:
        - !GetAtt 'DBSecurityGroup.GroupId'
    Type: AWS::RDS::DBInstance
  EC2SecurityGroup:
    Properties:
      GroupDescription: EC2 Security Group
      SecurityGroupIngress:
        - CidrIp: '0.0.0.0/0'
          Description: SSH
          FromPort: '22'
          IpProtocol: tcp
          ToPort: '22'
        - CidrIp: '0.0.0.0/0'
          Description: HTTP
          FromPort: '80'
          IpProtocol: tcp
          ToPort: '80'
        - CidrIp: '0.0.0.0/0'
          Description: HTTPS
          FromPort: '443'
          IpProtocol: tcp
          ToPort: '443'
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
    Type: AWS::EC2::SecurityGroup
  IPAssociation:
    Properties:
      AllocationId: eipalloc-aa755d96
      InstanceId: !Ref 'Instance'
    Type: AWS::EC2::EIPAssociation
  Instance:
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    DependsOn: Database
    Metadata:
      AWS::CloudFormation::Init:
        config:
          files:
            /tmp/instance.txt:
              content: !Ref 'AWS::StackName'
              group: root
              mode: '000644'
              owner: root
    Properties:
      IamInstanceProfile: SecretsManagerReadWrite
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - ami
      InstanceType: t3.medium
      KeyName: !Ref 'KeyName'
      SecurityGroups:
        - !Ref 'EC2SecurityGroup'
        - !Ref 'DBSecurityGroup'
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash -x\n"
            - "exec > /tmp/user-data.log 2>&1\n"
            - "unset UCF_FORCE_CONFFOLD\n"
            - "export UCF_FORCE_CONFFNEW=YES\n"
            - "ucf --purge /boot/grub/menu.lst\n"
            - "export DEBIAN_FRONTEND=noninteractive\n"
            - "apt-get update\n"
            - "apt-get -o Dpkg::Options::=\"--force-confnew\" --force-yes -fuy upgrade\n"
            - "apt-get install -y python-pip apache2 libapache2-mod-wsgi libmysqlclient-dev\n"
            - "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n"
            - "# Signal Cloudformation when set up is complete\n"
            - /usr/local/bin/cfn-signal -e $? --resource=Instance --region=
            - !Ref 'AWS::Region'
            - ' --stack='
            - !Ref 'AWS::StackName'
            - "\n"
    Type: AWS::EC2::Instance

